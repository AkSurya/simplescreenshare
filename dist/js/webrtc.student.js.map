{"version":3,"sources":["src/webrtc.student.js"],"names":["formLogin","document","getElementById","fieldUsername","usersListElement","localVideo1","localVideo2","localVideo3","remoteVideo","createOfferflag","socket","caller","receiver","peerConnection","mediaConstraints","audio","video","width","height","servers","sendToServer","msg","emit","JSON","stringify","updateListElement","usersArray","listElement","updatedList","map","user","name","value","join","innerHTML","callButtons","getElementsByClassName","Object","keys","forEach","key","addEventListener","inviteToVideoCall","getScreenStream","Promise","resolve","navigator","getDisplayMedia","console","log","then","screenStream","catch","error","mediaDevices","getScreenId","sourceId","screen_constraints","getUserMedia","getLocalMedia","enumerateDevices","devices","realV","i","length","device","kind","push","alert","mediaConstraints1","deviceId","mediaStream","mediaConstraints2","mediaStream2","mediaConstraints3","mediaStream3","getTracks","track","addTrack","srcObject","connect","event","info","io","date","Date","now","type","on","msgJSON","parse","users","answerOffer","receiveAnswer","addICECandidate","target","getAttribute","createPeerConnection","RTCPeerConnection","onicecandidate","candidate","onnegotiationneeded","createOffer","ontrack","streams","offer","setLocalDescription","sdp","localDescription","trace","setRemoteDescription","createAnswer","answer","RTCIceCandidate","addIceCandidate","$","hide"],"mappings":"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","sourcesContent":["// client-side js\n// run by the browser each time your view template is loaded\n\n(function () {\n\n  /* UI */\n\n  const formLogin = document.getElementById('form-login');\n  const fieldUsername = document.getElementById('username');\n  const usersListElement = document.getElementById('users-list');\n  const localVideo1 = document.getElementById('local-video1');\n  const localVideo2 = document.getElementById('local-video2');\n  const localVideo3 = document.getElementById('local-video3');\n  const remoteVideo = document.getElementById('remote-video');\n\n  /* Globals */\n  var createOfferflag = 0;\n\n  let socket;\n  let caller;\n  let receiver;\n  let peerConnection;\n  const mediaConstraints = { audio: false, video: { width: 1320, height: 820 } }\n  const servers = {\n    'iceServers': [\n      { 'urls': 'stun:stun.stunprotocol.org:3478' },\n      { 'urls': 'stun:stun.l.google.com:19302' },\n    ]\n  };\n\n  /* Functions */\n\n  function sendToServer(msg) {\n    socket.emit('message', JSON.stringify(msg));\n  }\n\n  function updateListElement(usersArray, listElement) {\n    const updatedList = usersArray.map(user => {\n      if (user.name == fieldUsername.value)\n        return `\n        <li class=\"user-item\">\n          ${user.name}\n        </li>`\n      else\n        return `\n        <li class=\"user-item\">\n          ${user.name} <button class=\"call\" data-target=\"${user.name}\">Call</button>\n        </li>`}\n    ).join('');\n\n    // Re-render user list\n    listElement.innerHTML = updatedList;\n\n    // Add event listeners to call button next to the user\n    const callButtons = document.getElementsByClassName('call');\n    Object.keys(callButtons).forEach(key => callButtons[key].addEventListener('click', inviteToVideoCall));\n  }\n  function getScreenStream() {\n    return new Promise(resolve => {\n      if (navigator.getDisplayMedia) {\n        console.log('-------------------------- 00000000000000000000')\n        navigator.getDisplayMedia({\n          video: true\n        }).then(screenStream => {\n          console.log('---------------------')\n          resolve(screenStream);\n        })\n          .catch(error => console.log(error))\n      } else if (navigator.mediaDevices.getDisplayMedia) {\n        console.log('-------------------------- 00000000000000000000 el')\n        navigator.mediaDevices.getDisplayMedia({\n          video: true\n        }).then(screenStream => {\n          console.log('found screen', screenStream)\n          resolve(screenStream);\n        }).catch(error => console.error(error))\n      } else {\n        console.log('-------------------------- 00000000000000000000 else0')\n        getScreenId(function (error, sourceId, screen_constraints) {\n          navigator.mediaDevices.getUserMedia(screen_constraints).then(function (screenStream) {\n            resolve(screenStream);\n          });\n        });\n      }\n    })\n\n  }\n\n  async function getLocalMedia(peerConnection) {\n    try {\n      console.log(\"hkdjlfkjslkdjflskj;dfklsjdljflsdffffffffffff\");\n      \n      var devices = await navigator.mediaDevices.enumerateDevices();;\n      console.log(\"Devices\", devices);\n      var realV = []\n      for (var i = 0; i < devices.length; i++) {\n        var device = devices[i];\n        if (device.kind === 'videoinput') {\n          realV.push(device)\n        }\n      }\n      console.log(\"realV\", realV);\n      if (realV.length < 3) {\n        alert(\"more devices\");\n        //    return;\n      }\n      //1320, 820\n\n      const mediaConstraints1 = { audio: false, video: { width: 400, height: 300, deviceId: realV[0].deviceId } };\n      const mediaStream = await navigator.mediaDevices.getUserMedia(mediaConstraints1);\n      console.log(\"first:\", mediaStream);\n      const mediaConstraints2 = { audio: false, video: { width: 400, height: 300, deviceId: realV[0].deviceId } };\n      const mediaStream2 = await navigator.mediaDevices.getUserMedia(mediaConstraints2);//await getScreenStream();\n      console.log(\"second:\", mediaStream2);\n      const mediaConstraints3 = { audio: false, video: { width: 400, height: 300, deviceId: realV[0].deviceId } };\n      const mediaStream3 = await navigator.mediaDevices.getUserMedia(mediaConstraints3);\n      console.log(\"third:\", mediaStream3);\n\n      mediaStream.getTracks().forEach(track => {\n        log('track', track)\n        peerConnection.addTrack(track, mediaStream);\n      });\n      mediaStream2.getTracks().forEach(track => {\n        log('track2', track)\n        peerConnection.addTrack(track, mediaStream2);\n      });\n      mediaStream3.getTracks().forEach(track => {\n        log('track3', track)\n        peerConnection.addTrack(track, mediaStream3);\n      });\n\n      localVideo1.srcObject = mediaStream;\n      localVideo2.srcObject = mediaStream2;\n      localVideo3.srcObject = mediaStream3;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function connect(event) {\n    // event.preventDefault();\n\n    // Hide form overlay\n    // event.target.parentNode.classList.add('hidden');\n\n    caller = fieldUsername.value;\n\n    console.info(`Connecting ${caller}...`);\n\n    // Connect to signaling server\n    socket = io('https://localhost:433');\n\n    // We tell the server who we are\n    sendToServer({\n      name: caller,\n      date: Date.now(),\n      type: 'username',\n    });\n\n    // When we receive the updated list of users we render them in the UI\n    socket.on('users', (msg) => {\n      const msgJSON = JSON.parse(msg);\n      console.log(\"updatelist\", msgJSON.users);\n      updateListElement(msgJSON.users, usersListElement);\n    });\n\n    // Listen to messages coming from signaling server\n    socket.on('message', (msg) => {\n      switch (msg.type) {\n        case 'offer':\n          answerOffer(msg);\n          break;\n\n        case 'answer':\n          receiveAnswer(msg);\n          break;\n\n        case 'ice-candidate':\n          addICECandidate(msg);\n          break;\n      }\n    });\n  }\n\n  async function inviteToVideoCall(event) {\n    // Check if we have an open connection already\n    if (peerConnection) {\n      console.log('You already have a call open.');\n    } else {\n      receiver = event.target.getAttribute('data-target');\n\n      if (receiver === caller) {\n        alert(\"You can't call yourself.\");\n        return;\n      }\n\n      peerConnection = createPeerConnection();\n\n      // Requesting webcam access...\n      console.log(\"invite to call-----------------\");\n      await getLocalMedia(peerConnection);\n    }\n  }\n\n  function createPeerConnection() {\n    console.log(`${caller} inviting ${receiver} to video call...`);\n\n    // Starts the peer connection\n    const peerConnection = new RTCPeerConnection(servers);\n\n    // Sends out our ICE candidate through our signaling server\n    peerConnection.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        sendToServer({\n          type: 'ice-candidate',\n          target: receiver, // on the receiver side this is undefined.\n          candidate: candidate,\n        });\n      }\n    };\n\n    // Creates an offer and sends it out through the signaling server\n    peerConnection.onnegotiationneeded = createOffer;\n\n    // When we get a track we add it to our remote video element\n    peerConnection.ontrack = event => {\n      remoteVideo.srcObject = event.streams[0];\n      log('event.streams: ' + event.streams.length);\n    }\n\n    return peerConnection;\n  }\n\n  async function createOffer() {\n    if (createOfferflag == 1) return;\n    else createOfferflag = 1;\n\n    console.log(`${caller} is creating an offer for ${receiver}`);\n\n    try {\n      // 1. Create an offer\n      const offer = await peerConnection.createOffer();\n      // 2. set the offer as local description\n      await peerConnection.setLocalDescription(offer);\n      // Send offer to remote peer\n      sendToServer({\n        name: caller,\n        target: receiver,\n        type: 'offer',\n        sdp: peerConnection.localDescription,\n      });\n    } catch (error) {\n      console.error(`Error when creating the offer: ${error}`);\n      log(`Error when creating the offer: ${error}`);\n      console.trace('error')\n    }\n  }\n\n  async function answerOffer(msg) {\n    // We save the reference of the people sending the offer\n    const receiver = msg.name;\n\n    console.log(`${caller} is creating an answer for ${receiver}`);\n\n    // Start the PeerConnection\n    peerConnection = createPeerConnection();\n\n    // 4. The recipient receives the offer and record it as the remote description\n    try {\n      await peerConnection.setRemoteDescription(msg.sdp);\n      // 5. The recipient includes its stream to the connection\n      console.log(\"answerOffer--------------------------\");\n      await getLocalMedia(peerConnection);\n      // 6. The recipient creates an answer\n      const answer = await peerConnection.createAnswer();\n      // 7. The recipient set the answer as its local description.\n      await peerConnection.setLocalDescription(answer);\n      // 8. The recipient uses the signaling server to send the answer to the caller.\n      sendToServer({\n        name: caller,\n        target: receiver,\n        type: 'answer',\n        sdp: peerConnection.localDescription,\n      });\n    } catch (error) {\n      console.error(`Error when creating the answer: ${error}`);\n    }\n  }\n\n  // This function i scalled when the caller receives an answer from the recipient about\n  // the video call offer we sent\n  async function receiveAnswer(msg) {\n    console.log('handling answer ', msg);\n\n    // 9. The caller receives the answer.\n    // 10. The caller set the answer as the remote description. It know knows the\n    // configuration of both peers. Media begins to flow as configured\n    await peerConnection.setRemoteDescription(msg.sdp);\n  }\n\n  async function addICECandidate(msg) {\n    const candidate = new RTCIceCandidate(msg.candidate);\n\n    try {\n      await peerConnection.addIceCandidate(candidate);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /* DOM event listeners */\n\n  // formLogin.addEventListener('submit', connect);\n  connect();\n  $('.form-overlay').hide();\n  // $('#btn_addCamera').click(async () => {\n  //   if (peerConnection == null) {\n  //     alert(\"Not connected peer\")\n  //     return;\n  //   }\n  //   // const mediaStream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n  //   // mediaStream.getTracks().forEach(track => {\n  //   //   log('track', track)\n  //   //   peerConnection.addTrack(track, mediaStream);\n  //   // });\n  //   const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n  //   var videoTrack = mediaStream.getVideoTracks()[0];\n\n  //   peerConnection.addTrack(videoTrack, mediaStream);\n  // })\n\n})();"],"file":"webrtc.student.js"}